{"version":3,"sources":["utils.js","SlideShow.js","Follower.js","App.js","useFetch.js","reportWebVitals.js","index.js"],"names":["paginate","photo","pages","Math","ceil","length","Array","from","_","index","start","slice","Slideshow","setslideshowdata","useState","isLoaded","setisLoaded","slideImages","setSlideImage","useEffect","axios","get","then","res","data","photos","className","style","marginTop","onClick","map","slideImage","backgroundImage","farm","server","id","secret","Follower","title","isHovered","setHover","images","imageSrc","a","fetch","image","blob","imageBlog","imageURL","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","onMouseOver","onMouseLeave","src","alt","App","loading","setLoading","setData","getProducts","response","json","console","log","useFetch","slideshowdata","page","setPage","check","setCheck","follower","oldPage","prevPage","item","handlePage","nextPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5bce5912.chunk.js","sourcesContent":["\nconst paginate = (photo) => {\n    const itemsPerPage=20;\n   const pages=Math.ceil(photo.length/itemsPerPage);\n   const newFollowers = Array.from({ length: pages }, (_, index) => {\n    const start = index * itemsPerPage;\n    return photo.slice(start, start + itemsPerPage);\n  })\n  return newFollowers;\n}\n\nexport default paginate\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Slide } from \"react-slideshow-image\";\nimport \"react-slideshow-image/dist/styles.css\";\nimport \"./Slideshow.css\";\nimport Follower from \"./Follower\";\n\n\n\nconst url =\n  \"https://api.flickr.com/services/rest/?method=flickr.interestingness.getList&api_key=93d38b80d4e01a18a2149f7ecf974821&format=json&nojsoncallback=1&page=${page}&per_page=60\";\n\nconst Slideshow  = ({setslideshowdata}) => {\n  const [isLoaded, setisLoaded] = useState(false);\n  const [slideImages, setSlideImage] = useState([]);\n\n  useEffect(() => {\n    axios.get(url).then((res) => {\n      setSlideImage(res.data.photos.photo);\n      setisLoaded(true);\n    });\n  }, []);\n\n  return (\n    <div className=\"slide-container\" style={{marginTop:'10px'}}>\n        <button className='btn' onClick={()=>setslideshowdata(false)}>Go Back to Grid</button>\n      {isLoaded ? (\n        <Slide>\n          {slideImages.map((slideImage, index) => (\n            <div className=\"each-slide\" key={index}>\n              <div\n                style={{\n                  backgroundImage:`url(https://farm${slideImage.farm}.staticflickr.com/${slideImage.server}/${slideImage.id}_${slideImage.secret}.jpg`,\n                }}\n              ></div>\n            </div>\n          ))}\n        </Slide>\n      ) : (\n        <h1>Loading...</h1>\n      )}\n    </div>\n  );\n};\nexport default Slideshow;\n","import React,{useState} from 'react'\nimport Slideshow from './SlideShow';\nconst Follower = ({server,id,secret,farm,title,setslideshowdata}) => {\nconst [isHovered, setHover] = useState(false);\nconst images=`https://farm${farm}.staticflickr.com/${server}/${id}_${secret}.jpg`;\n\nasync function download(imageSrc) {\n  const image = await fetch(imageSrc)\n  const imageBlog = await image.blob()\n  const imageURL = URL.createObjectURL(imageBlog)\n\n  const link = document.createElement('a')\n  link.href = imageURL\n  link.download = `${title}`\n  document.body.appendChild(link)\n  link.click()\n  document.body.removeChild(link)\n}\n\n  return (\n    <div>\n    <main>\n        <article className='card' onMouseOver={() => setHover(true)} onMouseLeave={() => setHover(false)}> \n            <img src={`${images}`} alt='login' onClick={()=>{setslideshowdata(true)}}></img>\n            {isHovered && (\n              <button className='btn' onClick={()=>download(images)}>\n                Download\n              </button>\n            )}   \n             </article>\n             </main>\n    </div>\n )\n}\n\nexport default Follower\n","import React, { useState, useEffect } from \"react\";\nimport { useFetch } from \"./useFetch\";\nimport Follower from \"./Follower\";\nimport Slideshow from \"./SlideShow\";\nfunction App() {\n  const { loading, data } = useFetch();\n  const [slideshowdata, setslideshowdata] = useState(false);\n  const [page, setPage] = useState(0);\n  const [check, setCheck] = useState([]);\n  useEffect(() => {\n    if (loading) return;\n    setCheck(data[page]);\n  }, [loading, page]);\n\n  const handlePage = (index) => {\n    setPage(index);\n  };\n\n  const nextPage = () => {\n    setPage((oldPage) => {\n      let nextPage = oldPage + 1;\n      if (nextPage > data.length - 1) {\n        nextPage = 0;\n      }\n      return nextPage;\n    });\n  };\n  const prevPage = () => {\n    setPage((oldPage) => {\n      let prevPage = oldPage - 1;\n      if (prevPage < 0) {\n        prevPage = data.length - 1;\n      }\n      return prevPage;\n    });\n  };\n\n  return (\n    <div>\n      {slideshowdata ? (\n        <Slideshow setslideshowdata={setslideshowdata}/>\n      ) : (\n        <main>\n          <div className=\"section-title\">\n            <button className=\"btn btn1\">Grid</button>\n            <h1>{loading ? \"loading\" : \"Flickr App\"}</h1>\n\n            <div className=\"underline\"></div>\n            <section className=\"followers\">\n              <div className=\"container\">\n                {check.map((follower) => {\n                  return <Follower key={follower.id} {...follower} setslideshowdata={setslideshowdata}></Follower>;\n                })}\n              </div>\n\n              {!loading && (\n                <div className=\"btn-container\">\n                  <button className=\"prev-btn\" onClick={prevPage}>\n                    prev\n                  </button>\n                  {data.map((item, index) => {\n                    return (\n                      <button\n                        onClick={() => handlePage(index)}\n                        key={index}\n                        className={`page-btn ${\n                          index === page ? \"active-btn\" : null\n                        }`}\n                      >\n                        {index + 1}\n                      </button>\n                    );\n                  })}\n                  <button className=\"next-btn\" onClick={nextPage}>\n                    next\n                  </button>\n                </div>\n              )}\n            </section>\n          </div>\n        </main>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react'\nimport paginate from './utils'\nconst url = 'https://api.flickr.com/services/rest/?method=flickr.interestingness.getList&api_key=93d38b80d4e01a18a2149f7ecf974821&format=json&nojsoncallback=1&page=${page}&per_page=60'\n;\nexport const useFetch = () => {\n  \n  const [loading, setLoading] = useState(true)\n  const [data, setData] = useState([])\n\n  const getProducts = async () => {\ntry\n{\n  const response = await fetch(url);\n  const data = await response.json();\n  ;\n  setData(paginate(data.photos.photo));\n  setLoading(false)\n}\ncatch(error)\n{\nconsole.log(error);\nsetLoading(true);\n}    \n  }\n  useEffect(() => {\ngetProducts();\n  }, [])\n  return { loading, data }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Slideshow from './SlideShow'\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}